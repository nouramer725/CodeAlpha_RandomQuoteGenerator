import 'package:flutter/material.dart';
import 'package:hexcolor/hexcolor.dart';
import 'package:quotessss/quote_model.dart';
import 'package:share_plus/share_plus.dart';
import 'api.dart';


class HomePage extends StatefulWidget {
  const HomePage({super.key});

  @override
  State<HomePage> createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  bool inProgress = false;
  Autogenerated? quote;
  bool isFavorited = false;

  @override
  void initState() {
    _fetchQuote();
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Container(
        decoration: BoxDecoration(
          image: DecorationImage(
            image: AssetImage('assets/images/White Icon Random Acts of Kindness Social Media Graphic.png'),
            fit: BoxFit.cover,
          ),
        ),
        child: Center(
          child: SingleChildScrollView(
            child: Padding(
              padding: const EdgeInsets.symmetric(
                  horizontal: 25,
              ),
                  child: Container(
                    width: double.infinity,
                    padding: const EdgeInsets.all(20.0),
                    decoration: BoxDecoration(
                      color: HexColor("#1f0e18"),
                      borderRadius: BorderRadius.circular(30),
                      boxShadow: const [
                        BoxShadow(
                          blurRadius: 40,
                          offset: Offset(10,15),
                          spreadRadius: BorderSide.strokeAlignCenter
                        ),
                      ],
                    ),
                    child: Center(
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          Icon(
                            Icons.format_quote ,
                            size: 35,
                            color: Colors.white,
                          ),
                          SizedBox(
                            height: 10,
                          ),
                          Text(
                            " ${quote?.tags ?? ""} ",
                            style: const TextStyle(
                              fontSize: 20.6,
                              color: Colors.white60,
                              fontFamily: 'serif',
                            ),
                          ),
                          Text("_________________"),
                          SizedBox(
                            height: 40,
                          ),
                          Padding(
                            padding: const EdgeInsets.all(8.0),
                            child: Text(
                              " ${quote?.content ?? ".."}",
                              style: const TextStyle(
                                fontSize: 23,
                                fontFamily: 'roboto',
                                fontWeight: FontWeight.bold,
                                color: Colors.white60,
                              ),
                              textAlign: TextAlign.justify,
                            ),
                          ),
                          Text("___________________________________"),
                          SizedBox(
                            height: 30,
                          ),
                          Stack(
                              alignment: AlignmentDirectional.bottomEnd,
                            children: [
                              Text(
                                "Author : ${quote?.author ?? ""} ",
                                style: const TextStyle(
                                  fontSize: 17,
                                  color: Colors.white60,
                                  fontFamily: 'serif',
                                ),
                              ),
                            ],
                          ),
                          SizedBox(
                            height: 3,
                          ),
                          Row(
                            mainAxisAlignment: MainAxisAlignment.end,
                            children: [
                              IconButton(
                                onPressed: () {
                                  setState(() {
                                    isFavorited = !isFavorited; // Toggle the state
                                  });
                                },
                                icon: CircleAvatar(
                                  backgroundColor: isFavorited ? Colors.pinkAccent : HexColor("#1f0e18"), // Conditional color
                                  radius: 15.0,
                                  child: Icon(
                                    isFavorited ? Icons.favorite : Icons.favorite, // Conditional icon
                                    size: 20.0,
                                    color: Colors.white,
                                  ),
                                ),
                              )
                            ],
                          ),
                          Icon(
                            Icons.format_quote ,
                            size: 35,
                          ),
                          inProgress ? const CircularProgressIndicator(
                            color: Colors.white,
                          ):Row(
                            children: [
                              ElevatedButton.icon(
                                onPressed: () {
                                  setState(() {
                                    isFavorited=false;
                                  });
                                  _fetchQuote();
                                  },
                                style: ElevatedButton.styleFrom(
                                    backgroundColor: Colors.white60,
                                ),
                                icon: Icon(Icons.refresh , color: Colors.black87,),
                                label: const Text(
                                  "Generate",
                                  style: TextStyle(color: Colors.black87),
                                ),
                              ),
                              Spacer(),
                              ElevatedButton.icon(
                                onPressed: () {
                                  if (quote != null) {
                                    Share.share(
                                      '"${quote?.content}" - ${quote?.author}',
                                      subject: 'Inspiring Quote',
                                    );
                                  } else {
                                    ScaffoldMessenger.of(context).showSnackBar(
                                      SnackBar(
                                        content: Text('No quote to share!'),
                                      ),
                                    );
                                  }
                                },
                                style: ElevatedButton.styleFrom(
                                  backgroundColor: Colors.white60,
                                ),
                                icon: Icon(Icons.share, color: Colors.black87,),
                                label: const Text(
                                  "Share",
                                  style: TextStyle(color: Colors.black87),
                                ),
                              ),
                            ],
                          ),
                        ],
                      ),
                    ),
                  ),
                ),
          ),
        ),
      ),
        );
  }

  _fetchQuote() async {
    setState(() {
      inProgress = true;
    });
    try {
      final fetchedQuote = await Api.getRandomQuote();
      debugPrint(fetchedQuote.toJson().toString());
      setState(() {
        quote = fetchedQuote;
      });
    } catch (e) {
      debugPrint("Failed to generate quote");
    } finally {
      setState(() {
        inProgress = false;
      });
    }
  }
}